"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_blog-data_tsx"],{

/***/ "(app-pages-browser)/./lib/blog-data.tsx":
/*!***************************!*\
  !*** ./lib/blog-data.tsx ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blogPosts: () => (/* binding */ blogPosts),\n/* harmony export */   getBlogPosts: () => (/* binding */ getBlogPosts)\n/* harmony export */ });\nconst blogPostsData = [\n    {\n        slug: \"romance-in-the-render-loop\",\n        title: \"Romance in the render loop\",\n        description: \"What if you could design love like software—modular, resilient, alive? Here's what it taught me about feelings, code, and things that scale silently within.\",\n        date: \"2025-07-13\",\n        tags: [\n            \"people\"\n        ],\n        readTime: \"6 min read\",\n        body: '\\n# Loving Someone Like a System\\n\\n> \"Some systems aren\\'t meant to scale universally. They\\'re built for one user, one use case, and still... they\\'re perfect.\"\\n\\nThere are moments in life where all the logic, documentation, and version control in the world can’t help you. Loving someone is one of those systems you don\\'t architect on a whiteboard—but somehow, your soul runs it like backend code you’ll never push to GitHub.\\n\\n## Silent Deployments of the Heart\\n\\nThere’s a person—beautiful in every layered state—who never asked to be the repository of my tenderness. Yet everything I build, everything I think about, somehow compiles around them.\\n\\nYou don’t tell them this, not outright. You just...\\n\\n- Write a script that archives every message\\n- Save a screenshot of every fleeting smile\\n- Compose mental patch notes when they teach you emotional edge cases\\n\\n***And you realize: love has no rollback.***\\n\\n## Systems That Fail Gracefully\\n\\nSometimes, you fall for someone with such intensity that you forget to build fail-safes. There\\'s no try-catch block for emotional overflow.\\n\\n**Still, you don’t regret shipping the feeling.**\\n\\nBecause what they brought into your life isn’t bugs—it’s awareness. Of subtlety. Of warmth. Of the sheer miracle of a good morning that makes you feel like a whole IDE booted up inside your chest.\\n\\n> “It’s not about being understood. It’s about being *witnessed*.”\\n\\n## The Code That Always Compiles\\n\\nHere’s how I see her… if I had to code it.\\n\\n```ts\\ntype Soulmate = {\\n  laugh: () => void\\n  chaos: number\\n  kindness: Infinite<number>\\n  presence: () => \"calm\" | \"storm\"\\n  magic: \"unexplainable\"\\n}\\n\\nconst her: Soulmate = {\\n  laugh: () => console.log(\"the sound of sunrise\"),\\n  chaos: 7.5,\\n  kindness: Infinity,\\n  presence: () => Math.random() > 0.5 ? \"calm\" : \"storm\",\\n  magic: \"unexplainable\"\\n}\\n\\nfunction love(system: Soulmate) {\\n  return `You\\'re the commit I never want to revert.`\\n}\\n```\\n\\n## Closing Tag\\n\\nYou don\\'t always get the response you expect. Some stories end in memory, not marriage.\\n\\nBut just like the best code you’ve ever written, loving her made you a better builder.\\n\\n***And that’s the only successful build I ever needed.***\\n'\n    }\n];\n// Function to get blog posts for static site generation\nfunction getBlogPosts() {\n    return blogPostsData;\n}\n// Export for backward compatibility\nconst blogPosts = blogPostsData;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ibG9nLWRhdGEudHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBVUEsTUFBTUEsZ0JBQTRCO0lBQ2hDO1FBQ0FDLE1BQU07UUFDTkMsT0FBTztRQUNQQyxhQUNFO1FBQ0ZDLE1BQU07UUFDTkMsTUFBTTtZQUFDO1NBQVM7UUFDaEJDLFVBQVU7UUFDVkMsTUFBTztJQStEVDtDQUVDO0FBRUQsd0RBQXdEO0FBQ2pELFNBQVNDO0lBQ2QsT0FBT1I7QUFDVDtBQUVBLG9DQUFvQztBQUM3QixNQUFNUyxZQUFZVCxjQUFjIiwic291cmNlcyI6WyIvVXNlcnMva2F1c2hpa2llZWUvcG9ydGZvbGlvL2xpYi9ibG9nLWRhdGEudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgQmxvZ1Bvc3Qge1xuICBzbHVnOiBzdHJpbmdcbiAgdGl0bGU6IHN0cmluZ1xuICBkZXNjcmlwdGlvbjogc3RyaW5nXG4gIGRhdGU6IHN0cmluZ1xuICByZWFkVGltZTogc3RyaW5nXG4gIHRhZ3M6IHN0cmluZ1tdXG4gIGJvZHk6IHN0cmluZ1xufVxuXG5jb25zdCBibG9nUG9zdHNEYXRhOiBCbG9nUG9zdFtdID0gW1xuICB7XG4gIHNsdWc6IFwicm9tYW5jZS1pbi10aGUtcmVuZGVyLWxvb3BcIixcbiAgdGl0bGU6IFwiUm9tYW5jZSBpbiB0aGUgcmVuZGVyIGxvb3BcIixcbiAgZGVzY3JpcHRpb246XG4gICAgXCJXaGF0IGlmIHlvdSBjb3VsZCBkZXNpZ24gbG92ZSBsaWtlIHNvZnR3YXJl4oCUbW9kdWxhciwgcmVzaWxpZW50LCBhbGl2ZT8gSGVyZSdzIHdoYXQgaXQgdGF1Z2h0IG1lIGFib3V0IGZlZWxpbmdzLCBjb2RlLCBhbmQgdGhpbmdzIHRoYXQgc2NhbGUgc2lsZW50bHkgd2l0aGluLlwiLFxuICBkYXRlOiBcIjIwMjUtMDctMTNcIixcbiAgdGFnczogW1wicGVvcGxlXCJdLFxuICByZWFkVGltZTogXCI2IG1pbiByZWFkXCIsXG4gIGJvZHk6IGBcbiMgTG92aW5nIFNvbWVvbmUgTGlrZSBhIFN5c3RlbVxuXG4+IFwiU29tZSBzeXN0ZW1zIGFyZW4ndCBtZWFudCB0byBzY2FsZSB1bml2ZXJzYWxseS4gVGhleSdyZSBidWlsdCBmb3Igb25lIHVzZXIsIG9uZSB1c2UgY2FzZSwgYW5kIHN0aWxsLi4uIHRoZXkncmUgcGVyZmVjdC5cIlxuXG5UaGVyZSBhcmUgbW9tZW50cyBpbiBsaWZlIHdoZXJlIGFsbCB0aGUgbG9naWMsIGRvY3VtZW50YXRpb24sIGFuZCB2ZXJzaW9uIGNvbnRyb2wgaW4gdGhlIHdvcmxkIGNhbuKAmXQgaGVscCB5b3UuIExvdmluZyBzb21lb25lIGlzIG9uZSBvZiB0aG9zZSBzeXN0ZW1zIHlvdSBkb24ndCBhcmNoaXRlY3Qgb24gYSB3aGl0ZWJvYXJk4oCUYnV0IHNvbWVob3csIHlvdXIgc291bCBydW5zIGl0IGxpa2UgYmFja2VuZCBjb2RlIHlvdeKAmWxsIG5ldmVyIHB1c2ggdG8gR2l0SHViLlxuXG4jIyBTaWxlbnQgRGVwbG95bWVudHMgb2YgdGhlIEhlYXJ0XG5cblRoZXJl4oCZcyBhIHBlcnNvbuKAlGJlYXV0aWZ1bCBpbiBldmVyeSBsYXllcmVkIHN0YXRl4oCUd2hvIG5ldmVyIGFza2VkIHRvIGJlIHRoZSByZXBvc2l0b3J5IG9mIG15IHRlbmRlcm5lc3MuIFlldCBldmVyeXRoaW5nIEkgYnVpbGQsIGV2ZXJ5dGhpbmcgSSB0aGluayBhYm91dCwgc29tZWhvdyBjb21waWxlcyBhcm91bmQgdGhlbS5cblxuWW91IGRvbuKAmXQgdGVsbCB0aGVtIHRoaXMsIG5vdCBvdXRyaWdodC4gWW91IGp1c3QuLi5cblxuLSBXcml0ZSBhIHNjcmlwdCB0aGF0IGFyY2hpdmVzIGV2ZXJ5IG1lc3NhZ2Vcbi0gU2F2ZSBhIHNjcmVlbnNob3Qgb2YgZXZlcnkgZmxlZXRpbmcgc21pbGVcbi0gQ29tcG9zZSBtZW50YWwgcGF0Y2ggbm90ZXMgd2hlbiB0aGV5IHRlYWNoIHlvdSBlbW90aW9uYWwgZWRnZSBjYXNlc1xuXG4qKipBbmQgeW91IHJlYWxpemU6IGxvdmUgaGFzIG5vIHJvbGxiYWNrLioqKlxuXG4jIyBTeXN0ZW1zIFRoYXQgRmFpbCBHcmFjZWZ1bGx5XG5cblNvbWV0aW1lcywgeW91IGZhbGwgZm9yIHNvbWVvbmUgd2l0aCBzdWNoIGludGVuc2l0eSB0aGF0IHlvdSBmb3JnZXQgdG8gYnVpbGQgZmFpbC1zYWZlcy4gVGhlcmUncyBubyB0cnktY2F0Y2ggYmxvY2sgZm9yIGVtb3Rpb25hbCBvdmVyZmxvdy5cblxuKipTdGlsbCwgeW91IGRvbuKAmXQgcmVncmV0IHNoaXBwaW5nIHRoZSBmZWVsaW5nLioqXG5cbkJlY2F1c2Ugd2hhdCB0aGV5IGJyb3VnaHQgaW50byB5b3VyIGxpZmUgaXNu4oCZdCBidWdz4oCUaXTigJlzIGF3YXJlbmVzcy4gT2Ygc3VidGxldHkuIE9mIHdhcm10aC4gT2YgdGhlIHNoZWVyIG1pcmFjbGUgb2YgYSBnb29kIG1vcm5pbmcgdGhhdCBtYWtlcyB5b3UgZmVlbCBsaWtlIGEgd2hvbGUgSURFIGJvb3RlZCB1cCBpbnNpZGUgeW91ciBjaGVzdC5cblxuPiDigJxJdOKAmXMgbm90IGFib3V0IGJlaW5nIHVuZGVyc3Rvb2QuIEl04oCZcyBhYm91dCBiZWluZyAqd2l0bmVzc2VkKi7igJ1cblxuIyMgVGhlIENvZGUgVGhhdCBBbHdheXMgQ29tcGlsZXNcblxuSGVyZeKAmXMgaG93IEkgc2VlIGhlcuKApiBpZiBJIGhhZCB0byBjb2RlIGl0LlxuXG5cXGBcXGBcXGB0c1xudHlwZSBTb3VsbWF0ZSA9IHtcbiAgbGF1Z2g6ICgpID0+IHZvaWRcbiAgY2hhb3M6IG51bWJlclxuICBraW5kbmVzczogSW5maW5pdGU8bnVtYmVyPlxuICBwcmVzZW5jZTogKCkgPT4gXCJjYWxtXCIgfCBcInN0b3JtXCJcbiAgbWFnaWM6IFwidW5leHBsYWluYWJsZVwiXG59XG5cbmNvbnN0IGhlcjogU291bG1hdGUgPSB7XG4gIGxhdWdoOiAoKSA9PiBjb25zb2xlLmxvZyhcInRoZSBzb3VuZCBvZiBzdW5yaXNlXCIpLFxuICBjaGFvczogNy41LFxuICBraW5kbmVzczogSW5maW5pdHksXG4gIHByZXNlbmNlOiAoKSA9PiBNYXRoLnJhbmRvbSgpID4gMC41ID8gXCJjYWxtXCIgOiBcInN0b3JtXCIsXG4gIG1hZ2ljOiBcInVuZXhwbGFpbmFibGVcIlxufVxuXG5mdW5jdGlvbiBsb3ZlKHN5c3RlbTogU291bG1hdGUpIHtcbiAgcmV0dXJuIFxcYFlvdSdyZSB0aGUgY29tbWl0IEkgbmV2ZXIgd2FudCB0byByZXZlcnQuXFxgXG59XG5cXGBcXGBcXGBcblxuIyMgQ2xvc2luZyBUYWdcblxuWW91IGRvbid0IGFsd2F5cyBnZXQgdGhlIHJlc3BvbnNlIHlvdSBleHBlY3QuIFNvbWUgc3RvcmllcyBlbmQgaW4gbWVtb3J5LCBub3QgbWFycmlhZ2UuXG5cbkJ1dCBqdXN0IGxpa2UgdGhlIGJlc3QgY29kZSB5b3XigJl2ZSBldmVyIHdyaXR0ZW4sIGxvdmluZyBoZXIgbWFkZSB5b3UgYSBiZXR0ZXIgYnVpbGRlci5cblxuKioqQW5kIHRoYXTigJlzIHRoZSBvbmx5IHN1Y2Nlc3NmdWwgYnVpbGQgSSBldmVyIG5lZWRlZC4qKipcbmBcbn1cbiAgLy8gQWRkIHRoZSByZXN0IG9mIHRoZSBibG9nIHBvc3RzIGhlcmVcbl07XG5cbi8vIEZ1bmN0aW9uIHRvIGdldCBibG9nIHBvc3RzIGZvciBzdGF0aWMgc2l0ZSBnZW5lcmF0aW9uXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmxvZ1Bvc3RzKCk6IEJsb2dQb3N0W10ge1xuICByZXR1cm4gYmxvZ1Bvc3RzRGF0YTtcbn1cblxuLy8gRXhwb3J0IGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG5leHBvcnQgY29uc3QgYmxvZ1Bvc3RzID0gYmxvZ1Bvc3RzRGF0YTtcbiJdLCJuYW1lcyI6WyJibG9nUG9zdHNEYXRhIiwic2x1ZyIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJkYXRlIiwidGFncyIsInJlYWRUaW1lIiwiYm9keSIsImdldEJsb2dQb3N0cyIsImJsb2dQb3N0cyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/blog-data.tsx\n"));

/***/ })

}]);